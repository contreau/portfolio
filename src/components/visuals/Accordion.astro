<script>
  const accordionRows = document.querySelectorAll(".accordion-row");
  accordionRows[1].addEventListener("animationend", () => {
    accordionRows.forEach((row) => row.classList.remove("animate-row"));
    setTimeout(() => {
      accordionRows.forEach((row) => row.classList.add("animate-row"));
    }, 1000);
  });
</script>

<div class="accordion-container">
  <div class="accordion-row row-1 animate-row">
    <span>Lorem</span>
    <div class="row-content">
      <p>Marco.</p>
    </div>
  </div>
  <div class="accordion-row row-2 animate-row">
    <span>Ipsum</span>
    <div class="row-content">
      <p>Polo.</p>
    </div>
  </div>
</div>

<style>
  .accordion-container {
    min-height: 150px;
    max-height: 150px;
    min-width: 150px;
    overflow-y: hidden;
    max-height: 150px;
    align-content: center;
  }

  .accordion-row {
    --blue: #033c5a;
    min-height: 35px;
    background-color: #f3f3f3;
    border-left: solid 3.5px var(--blue);
    border-radius: 2.5px;
    border-bottom-left-radius: 0;
    position: relative;
    text-align: left;
  }

  .row-content {
    display: grid;
    grid-template-rows: 0fr;
  }

  .row-content > p {
    font-size: 0.8rem;
    font-weight: 400;
    padding-left: 2rem;
    overflow: hidden;
  }

  .accordion-row + .accordion-row {
    margin-top: 0.5rem;
  }

  .accordion-row span {
    padding-left: 2rem;
    font-size: 0.95rem;
    font-weight: 600;
    color: var(--blue);
  }

  .accordion-row::before,
  .accordion-row::after {
    content: "";
    background-color: var(--blue);
    min-height: 1.5px;
    min-width: 8px;
    position: absolute;
    top: 16.5px;
  }

  .accordion-row::before {
    transform: rotate(45deg);
    left: 5.5px;
  }

  .accordion-row::after {
    transform: rotate(135deg);
    left: 10.5px;
  }

  /* Animation Config */

  .animate-row .row-content {
    animation: expandAccordion 3000ms;
  }

  .animate-row.row-2 .row-content {
    animation-delay: 3000ms;
  }

  .animate-row::before {
    animation: rotateBeforeSymbol 3000ms;
  }

  .animate-row::after {
    animation: rotateAfterSymbol 3000ms;
  }

  .animate-row.row-2::before,
  .animate-row.row-2::after {
    animation-delay: 3000ms;
  }

  @keyframes expandAccordion {
    0% {
      grid-template-rows: 0fr;
    }
    50% {
      grid-template-rows: 1fr;
    }
    100% {
      grid-template-rows: 0fr;
    }
  }

  @keyframes rotateBeforeSymbol {
    0% {
      transform: rotate(45deg);
    }
    50% {
      transform: rotate(135deg);
    }
    100% {
      transform: rotate(45deg);
    }
  }

  @keyframes rotateAfterSymbol {
    0% {
      transform: rotate(135deg);
    }
    50% {
      transform: rotate(45deg);
    }
    100% {
      transform: rotate(135deg);
    }
  }
</style>
