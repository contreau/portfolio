---
const { projectName, projectDescription, projectURL, urlTarget } = Astro.props;
interface Props {
  projectName: string;
  projectDescription: string;
  projectURL?: string;
  urlTarget?: string;
}
let target = "_blank";
if (urlTarget) target = urlTarget;
---

<div class="project-item">
  <div class="item-visual">
    <slot name="project-visual">
      <span class="fallback"></span>
    </slot>
  </div>
  <div class="item-info">
    <p class="project-name">
      <a href={projectURL} target={target}>{projectName}</a>
    </p>
    <p class="project-description">
      {projectDescription}
    </p>
    <slot name="chip" />
  </div>
</div>

<style scoped>
  .project-item {
    display: flex;
    gap: 3rem;
    /* align-items: center; */
    p {
      margin-top: 0.25rem;
      margin-bottom: 0.25rem;
    }
  }

  .project-item:has(span.fallback) .project-description {
    /* sets max-width on description text for items without visuals */
    max-width: 95%;
  }

  .item-visual:has(span.fallback) {
    /* removes the div wrapper from any project with no visual; keeps layout uniform */
    display: none;
  }

  .project-name {
    font-size: clamp(0.8rem, 6vw, 1.05rem);
    font-weight: 500;

    a {
      color: var(--primary);
    }
  }

  .project-description {
    font-size: clamp(0.85rem, 4vw, 0.9rem);
    font-style: italic;
    max-width: 95%;
  }

  @media (max-width: 1100px) {
    .project-item {
      flex-direction: column;
      text-align: center;
      align-items: center;
      gap: 1rem;
    }

    .project-item:has(span.fallback) .project-description {
      /* sets max-width on description text for items without visuals */
      max-width: 100%;
    }

    .project-description {
      max-width: 100%;
      text-wrap: balance;
    }

    .project-name {
      text-wrap: balance;
    }
  }
</style>
